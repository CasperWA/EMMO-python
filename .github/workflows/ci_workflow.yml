name: CI Workflow

on: [push]

jobs:

  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1
      matrix:
        python-version: [3.7]

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Check Ubuntu version we are running under
      run: |
        uname -a
    - name: Current environment
      run: |
        env
    - name: Install DLite
      run: |
        emmodir=$PWD
        #sudo apt-get install gcc
        #sudo apt-get install make
        #sudo apt-get install cmake
        #sudo apt-get install libjansson-dev
        #sudo apt-get install libhdf5-dev
        #sudo apt-get install python3-dev
        #sudo apt-get install python3-numpy
        #sudo apt-get install python3-yaml
        #sudo apt-get install python3-psycopg2
        #sudo apt-get install swig3.0
        #sudo apt-get install doxygen
        #cd ..
        #git clone https://github.com/SINTEF/dlite.git
        #cd dlite
        #git submodule init
        #git submodule update
        #mkdir build
        #cd build
        #cmake ..
        #make
        #make test
        #sudo make install
        #cd $emmodir
    - name: Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-line-length=79 --statistics
    - name: Install pandoc 2.1.2
      run: |
        #sudo apt-get install pandoc
        wget https://github.com/jgm/pandoc/releases/download/2.1.2/pandoc-2.1.2-1-amd64.deb
        sudo apt-get install ./pandoc-2.1.2-1-amd64.deb
    - name: Install other dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        sudo apt-get install graphviz
        sudo apt-get install texlive-xetex
        sudo apt-get install texlive-latex-extra
    - name: Install EMMO-python
      run: |
        python setup.py install
    - name: Test with pytest
      run: |
        pip install pytest
        pytest
    - name: Create EMMO documentation
      run: |
        cd examples/emmodoc
        python ../../tools/ontodoc -f simple-html emmo-inferred.owl emmo-simple.html
        python ../../tools/ontodoc -t emmo.md emmo-inferred.owl emmo.html
        python ../../tools/ontodoc -t emmo.md emmo-inferred.owl emmo.pdf
        cd -
    - name: Upload EMMO documentation as artifact
      uses: actions/upload-artifact@v1
      with:
        name: emmodoc
        path: examples/emmodoc
    - name: Run vertical demo
      run: |
        cd demo/vertical
        python define_ontology.py
        python plot_ontology.py
        cd -
    - name: Run horizontal demo
      run: |
        cd demo/horizontal
        #python step1_generate_metadata.py
        #python step2_define_metadata.py
        #python step3_instantiate.py
        #python step4_map_instance.py
        cd -
#
#    - name: Install latest version of cmake
#      run: |
#        #sudo apt-get install apt-transport-https
#        #sudo apt-get install ca-certificates
#        #sudo apt-get install -y gnupg
#        #sudo apt-get install -y software-properties-common
#        #sudo apt-get install wget
#        # Obtain signing key
#        wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | sudo apt-key add -
#        # Add Kitware repo
#        sudo apt-add-repository 'deb https://apt.kitware.com/ubuntu/ bionic main'
#        sudo apt-get install cmake
#
#    - name: Create Release
#      id: create_release
#      uses: actions/create_release@v1
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # token provided by actions
#      with:
#        tag_name: v${{ github.ref }}
#        release_name: ${{ github.ref }}
#        body: |
#          Changes in this Release
#          - First change
#          - Second change
#        draft: false
#        prerelease: true


  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          # This token is provided by Actions, you do not need to
          # create your own token
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          #tag_name: ${{ github.ref }}
          tag_name: v1.0.0-alpha.5
          release_name: Release ${{ github.ref }}
          body: |
            Changes in this Release
            - First Change
            - Second Change
          draft: false
          prerelease: true


  release:
    name: Upload Release Asset
    runs-on: ubuntu-latest
    needs: create_release
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - name: Download emmodoc as artifact
        uses: actions/download-artifact@v1
        with:
          name: emmodoc
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          #tag_name: ${{ github.ref }}
          tag_name: v1.0.0-alpha.5
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: true
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # This pulls from the CREATE RELEASE step above, referencing
          # it's ID to get its outputs object, which include a
          # `upload_url`. See this blog post for more info:
          # https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./emmodoc/emmo.pdf
          asset_name: emmo.pdf
          asset_content_type: application/pdf
          #asset_content_type: application/zip
